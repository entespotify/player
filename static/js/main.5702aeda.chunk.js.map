{"version":3,"sources":["components/Controls.js","components/Details.js","components/Player.js","App.js","index.js"],"names":["Controls","props","className","onClick","SkipSong","icon","faBackward","setIsPlaying","isPlaying","faPause","faPlay","faForward","Details","src","song","albumart","alt","title","artist","Player","audioEl","useRef","useState","useEffect","current","play","pause","songs","currentSongIndex","track","ref","forwards","setCurrentSongIndex","temp","length","nextSongIndex","App","album","setTracks","setNextSongIndex","fetch","then","res","json","result","console","log","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAoBeA,MAhBf,SAAkBC,GACd,OACI,sBAAKC,UAAU,uBAAf,UACI,wBAAQA,UAAU,WAAWC,QAAS,kBAAMF,EAAMG,UAAS,IAA3D,SACI,cAAC,IAAD,CAAiBC,KAAMC,QAE3B,wBAAQJ,UAAU,WAAWC,QAAS,kBAAMF,EAAMM,cAAcN,EAAMO,YAAtE,SACI,cAAC,IAAD,CAAiBH,KAAMJ,EAAMO,UAAYC,IAAUC,QAEvD,wBAAQR,UAAU,WAAWC,QAAS,kBAAMF,EAAMG,YAAlD,SACI,cAAC,IAAD,CAAiBC,KAAMM,YCAxBC,MAZf,SAAiBX,GACb,OACI,sBAAKC,UAAU,sBAAf,UACI,qBAAKA,UAAU,cAAf,SACI,qBAAKW,IAAKZ,EAAMa,KAAKC,SAAUC,IAAI,OAEvC,oBAAId,UAAU,gBAAd,SAA+BD,EAAMa,KAAKG,QAC1C,oBAAIf,UAAU,iBAAd,SAAgCD,EAAMa,KAAKI,aC4CxCC,MAjDf,SAAgBlB,GACZ,IAAMmB,EAAUC,iBAAO,MACvB,EAAkCC,oBAAS,GAA3C,mBAAOd,EAAP,KAAkBD,EAAlB,KAoCA,OAlCAgB,qBAAU,WACFf,EACAY,EAAQI,QAAQC,OAEhBL,EAAQI,QAAQE,WA+BpB,sBAAKxB,UAAU,aAAf,UACI,uBAAOW,IAAKZ,EAAM0B,MAAM1B,EAAM2B,kBAAkBC,MAAOC,IAAKV,IAC5D,6CACA,cAAC,EAAD,CAASN,KAAMb,EAAM0B,MAAM1B,EAAM2B,oBACjC,cAAC,EAAD,CAAUpB,UAAWA,EAAWD,aAAcA,EAAcH,SA/BnD,WAAsB,IAArB2B,IAAoB,yDAC9BA,EACA9B,EAAM+B,qBAAoB,WACtB,IAAIC,EAAOhC,EAAM2B,iBAOjB,QANAK,EAEWhC,EAAM0B,MAAMO,OAAS,IAC5BD,EAAO,GAGJA,KAGXhC,EAAM+B,qBAAoB,WACtB,IAAIC,EAAOhC,EAAM2B,iBAOjB,QANAK,EAEW,IACPA,EAAOhC,EAAM0B,MAAMO,OAAS,GAGzBD,QAWX,0CAAY,iCAAOhC,EAAM0B,MAAM1B,EAAMkC,eAAelB,MAAxC,OAAmDhB,EAAM0B,MAAM1B,EAAMkC,eAAejB,iBCH7FkB,MA1Cf,WACE,MAA2Bd,mBAAS,CAAC,CAACL,MAAM,GAAIC,OAAO,GAAImB,MAAM,GAAItB,SAAS,GAAIc,MAAM,MAAxF,mBAAOF,EAAP,KAAcW,EAAd,KAEA,EAAgDhB,mBAAS,GAAzD,mBAAOM,EAAP,KAAyBI,EAAzB,KACA,EAA0CV,mBAAS,GAAnD,mBAAOa,EAAP,KAAsBI,EAAtB,KA0BA,OAxBAhB,qBAAU,WACRgB,GAAiB,WACf,OAAIX,EAAmB,EAAID,EAAMO,OAAS,EACjC,EAEAN,EAAmB,OAG7B,CAACA,IAEJL,qBAAU,WACNiB,MAAM,mDACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MACC,SAACG,GACGC,QAAQC,IAAIF,GACZN,EAAUM,MAEd,SAACG,GACCT,EAAU,cAGnB,IAGD,qBAAKpC,UAAU,MAAf,SACE,cAAC,EAAD,CACE0B,iBAAkBA,EAClBI,oBAAqBA,EACrBG,cAAeA,EACfR,MAAOA,OClCfqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5702aeda.chunk.js","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay, faPause, faForward, faBackward } from '@fortawesome/free-solid-svg-icons'\n\nfunction Controls(props) {\n    return (\n        <div className=\"cmp-player--controls\">\n            <button className=\"skip-btn\" onClick={() => props.SkipSong(false)}>\n                <FontAwesomeIcon icon={faBackward} />\n            </button>\n            <button className=\"play-btn\" onClick={() => props.setIsPlaying(!props.isPlaying)}>\n                <FontAwesomeIcon icon={props.isPlaying ? faPause : faPlay} />\n            </button>\n            <button className=\"skip-btn\" onClick={() => props.SkipSong()}>\n                <FontAwesomeIcon icon={faForward} />\n            </button>\n        </div>\n    )\n}\n\nexport default Controls\n","import React from 'react'\n\nfunction Details(props) {\n    return (\n        <div className=\"cmp-player--details\">\n            <div className=\"details-img\">\n                <img src={props.song.albumart} alt=\"\" />\n            </div>\n            <h3 className=\"details-title\">{props.song.title}</h3>\n            <h4 className=\"details-artist\">{props.song.artist}</h4>\n        </div>\n    )\n}\n\nexport default Details\n","import React, {useState, useRef, useEffect} from 'react'\nimport Controls from './Controls';\nimport Details from './Details';\n\nfunction Player(props) {\n    const audioEl = useRef(null);\n    const [isPlaying, setIsPlaying] = useState(false);\n\n    useEffect(() => {\n        if (isPlaying) {\n            audioEl.current.play();\n        } else {\n            audioEl.current.pause();\n        }\n    });\n\n    const SkipSong = (forwards = true) => {\n        if (forwards) {\n            props.setCurrentSongIndex(() => {\n                let temp = props.currentSongIndex;\n                temp++;\n\n                if (temp > props.songs.length - 1) {\n                    temp = 0;\n                }\n\n                return temp;\n            });\n        } else {\n            props.setCurrentSongIndex(() => {\n                let temp = props.currentSongIndex;\n                temp--;\n\n                if (temp < 0) {\n                    temp = props.songs.length - 1;\n                }\n\n                return temp;\n            });\n        }\n    }\n\n    return (\n        <div className=\"cmp-player\">\n            <audio src={props.songs[props.currentSongIndex].track} ref={audioEl}></audio>\n            <h4>Playing now</h4>\n            <Details song={props.songs[props.currentSongIndex]} />\n            <Controls isPlaying={isPlaying} setIsPlaying={setIsPlaying} SkipSong={SkipSong} />\n            <p>Next up: <span>{props.songs[props.nextSongIndex].title} by {props.songs[props.nextSongIndex].artist}</span></p>\n        </div>\n    )\n}\n\nexport default Player;\n","import {useState, useEffect} from 'react';\nimport Player from './components/Player';\n\nfunction App() {\n  const [songs, setTracks] = useState([{title:'', artist:'', album:'', albumart:'', track:''}]);\n\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\n  const [nextSongIndex, setNextSongIndex] = useState(0);\n\n  useEffect(() => {\n    setNextSongIndex(() => {\n      if (currentSongIndex + 1 > songs.length - 1) {\n        return 0;\n      } else {\n        return currentSongIndex + 1;\n      }\n    });\n  }, [currentSongIndex]);\n\n  useEffect(() => {\n      fetch(\"https://hacksawrazor.pythonanywhere.com/tracks/\")\n        .then(res => res.json())\n          .then(\n            (result) => {\n                console.log(result);\n                setTracks(result);\n            },\n            (error) => {\n              setTracks(\"Error\");\n            }\n          )\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Player \n        currentSongIndex={currentSongIndex} \n        setCurrentSongIndex={setCurrentSongIndex} \n        nextSongIndex={nextSongIndex} \n        songs={songs}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}