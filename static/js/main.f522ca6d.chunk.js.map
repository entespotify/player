{"version":3,"sources":["components/Controls.js","components/Details.js","components/Player.js","components/SongList.js","components/Intro.js","App.js","index.js"],"names":["Controls","props","className","isFullScreen","onClick","SkipSong","icon","faBackwardStep","setIsPlaying","isPlaying","faPause","faPlay","faForwardStep","Details","src","song","albumart","alt","title","artist","Player","audioEl","useRef","useState","setIsFullScreen","useEffect","current","play","pause","faAngleDown","faAngleUp","songs","currentSongIndex","track","ref","forwards","setCurrentSongIndex","temp","length","SongList","map","index","findIndex","i","console","log","displaySong","album","Intro","size","App","setTracks","isLoading","setIsLoading","fetch","then","res","json","result","error","class","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f522ca6d.chunk.js","sourcesContent":["import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlay, faPause, faForwardStep, faBackwardStep } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Controls(props) {\r\n    return (\r\n        <div className=\"cmp-player--controls\">\r\n            {props.isFullScreen ?\r\n                <button className=\"skip-btn\" onClick={() => props.SkipSong(false)}>\r\n                    <FontAwesomeIcon icon={faBackwardStep} />\r\n                </button>\r\n                : null}\r\n            <button className=\"play-btn\" onClick={() => props.setIsPlaying(!props.isPlaying)}>\r\n                <FontAwesomeIcon icon={props.isPlaying ? faPause : faPlay} />\r\n            </button>\r\n            {props.isFullScreen ?\r\n                <button className=\"skip-btn\" onClick={() => props.SkipSong()}>\r\n                    <FontAwesomeIcon icon={faForwardStep} />\r\n                </button>\r\n                : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Controls\r\n","import React from 'react'\r\n\r\nfunction Details(props) {\r\n    return (\r\n        <div className=\"cmp-player--details\">\r\n            {props.isFullScreen ?   \r\n            <div className=\"details-img\">\r\n                    <img src={props.song.albumart} alt=\"Album Art\" />\r\n                </div>: null }\r\n            <p className=\"details-title\">{props.song.title}</p>\r\n            <p className=\"details-artist\">{props.song.artist}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport Controls from './Controls';\r\nimport Details from './Details';\r\nimport { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Player(props) {\r\n    const audioEl = useRef(null);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const [isFullScreen, setIsFullScreen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isPlaying) {\r\n            audioEl.current.play();\r\n        } else {\r\n            audioEl.current.pause();\r\n        }\r\n    });\r\n\r\n    const SkipSong = (forwards = true) => {\r\n        if (forwards) {\r\n            props.setCurrentSongIndex(() => {\r\n                let temp = props.currentSongIndex;\r\n                temp++;\r\n\r\n                if (temp > props.songs.length - 1) {\r\n                    temp = 0;\r\n                }\r\n\r\n                return temp;\r\n            });\r\n        } else {\r\n            props.setCurrentSongIndex(() => {\r\n                let temp = props.currentSongIndex;\r\n                temp--;\r\n\r\n                if (temp < 0) {\r\n                    temp = props.songs.length - 1;\r\n                }\r\n\r\n                return temp;\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={\"cmp-player \" + (isFullScreen ? 'cmp-player-full' : 'cmp-player-mini')}>\r\n            <button className=\"angle-btn\" onClick={() => setIsFullScreen(!isFullScreen)}>\r\n                <FontAwesomeIcon icon={isFullScreen ? faAngleDown : faAngleUp} />\r\n            </button>\r\n            <audio src={props.songs[props.currentSongIndex].track} ref={audioEl}></audio>\r\n            <Details song={props.songs[props.currentSongIndex]} isFullScreen={isFullScreen} />\r\n            <Controls isPlaying={isPlaying} setIsPlaying={setIsPlaying} SkipSong={SkipSong} isFullScreen={isFullScreen} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player;\r\n","import React, { useState } from 'react'\r\nimport Player from './Player';\r\n\r\nfunction SongList(props) {\r\n    const [currentSongIndex, setCurrentSongIndex] = useState(0);\r\n    let displaySong = (title) => {\r\n        let index = props.songs.findIndex(i => i.title === title)\r\n        console.log(\"Song clicked \" + index);\r\n        setCurrentSongIndex(index);\r\n    }\r\n    return (\r\n        <div className=\"cmp-song-list\">\r\n            <ul className=\"cmp-song-list-ul\"> {props.songs.map(song => (\r\n                <li className=\"cmp-song-list-item\" key={song.title} onClick={() => displaySong(song.title)}>\r\n                    <img className='cmp-song-list-img' src={song.albumart} alt=\"Mini album-art\" />\r\n                    <div className='cmp-song-list-text'>\r\n                        <span className='cmp-song-list-title'>{song.title}</span>\r\n                        <br />\r\n                        <span className='cmp-song-list-album'>{song.album}</span>\r\n                    </div>\r\n                </li>\r\n            ))}\r\n            </ul>\r\n            <Player\r\n                currentSongIndex={currentSongIndex}\r\n                setCurrentSongIndex={setCurrentSongIndex}\r\n                songs={props.songs}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongList\r\n","import React from 'react'\r\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\r\n\r\nfunction Intro() {\r\n    return (\r\n        <div className='cmp-loading'>\r\n            <ScaleLoader size={150} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Intro","import { useState, useEffect } from 'react';\r\nimport SongList from './components/SongList';\r\nimport Intro from './components/Intro';\r\n\r\nfunction App() {\r\n\tconst [songs, setTracks] = useState([{ title: '', artist: '', album: '', albumart: '', track: '' }]);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(\"https://hacksawrazor.pythonanywhere.com/tracks/\")\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(\r\n\t\t\t\t(result) => {\r\n\t\t\t\t\tsetTracks(result);\r\n\t\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t},\r\n\t\t\t\t(error) => {\r\n\t\t\t\t\tsetTracks(\"Error\");\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"app\">\r\n\t\t\t<div class=\"cmp-navbar\">\r\n\t\t\t\t<a class=\"cmp-navbar-title\" href=\"https://entespotify.github.io/reactive\">entespotify</a>\r\n\t\t\t</div>\r\n\t\t\t{isLoading ?\r\n\t\t\t\t<Intro />\r\n\t\t\t\t:\r\n\t\t\t\t<SongList songs={songs} />\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}